# .github/workflows/build-ios-macos-unsigned.yml
name: Build iOS & macOS (Unsigned)

on:
  push:
    branches: [ "main" ] # Triggers on pushes to the main branch
  pull_request:
    branches: [ "main" ] # Triggers on pull requests to the main branch
  workflow_dispatch: # Allows manual triggering

jobs:
  build_ios:
    name: Build iOS App for Simulator (Unsigned)
    runs-on: macos-latest # Use the latest macOS runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby for CocoaPods
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Updated Ruby version

      - name: Install CocoaPods
        run: gem install cocoapods

      # If your Podfile is not in the root, adjust the working-directory
      # e.g., working-directory: ./AetherVoice
      - name: Install Pod dependencies
        run: pod install --repo-update
        # working-directory: ./AetherVoice # Uncomment and set if Podfile is in a subfolder

      - name: Select latest Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable' # Or specify a particular version e.g. '15.3'

      - name: Discover Workspace
        id: discover_workspace
        run: |
          # Find the .xcworkspace file.
          # Searches in the root and one level down (e.g., ./AetherVoice/*.xcworkspace)
          WORKSPACE_PATH=$(find . -maxdepth 2 -name "*.xcworkspace" -print -quit)
          if [ -z "$WORKSPACE_PATH" ]; then
            echo "Error: No .xcworkspace found in the root directory or one level down."
            exit 1
          fi
          # Remove leading ./ if present
          WORKSPACE_NAME=$(basename "$WORKSPACE_PATH")
          echo "Discovered workspace: $WORKSPACE_NAME"
          echo "WORKSPACE_PATH_FULL=$WORKSPACE_PATH" >> $GITHUB_OUTPUT # Store full path
          echo "WORKSPACE_NAME=$WORKSPACE_NAME" >> $GITHUB_OUTPUT
          # Determine the directory of the workspace
          WORKSPACE_DIR=$(dirname "$WORKSPACE_PATH")
          echo "WORKSPACE_DIR=$WORKSPACE_DIR" >> $GITHUB_OUTPUT


      - name: Build iOS Application
        env:
          # IMPORTANT: Replace 'AetherVoice' if your scheme name is different
          SCHEME_NAME: 'AetherVoice'
          WORKSPACE_PATH_FULL: ${{ steps.discover_workspace.outputs.WORKSPACE_PATH_FULL }}
          DESTINATION: 'generic/platform=iOS Simulator'
        run: |
          echo "Building iOS workspace: $WORKSPACE_PATH_FULL with scheme: $SCHEME_NAME"
          xcodebuild build-for-testing \
            -workspace "$WORKSPACE_PATH_FULL" \
            -scheme "$SCHEME_NAME" \
            -destination "$DESTINATION" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            ONLY_ACTIVE_ARCH=NO

      - name: Upload iOS Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS-Build-Output-${{ env.SCHEME_NAME }}
          path: |
            **/Build/Products/*-iphonesimulator/*.app
          if-no-files-found: error # Fails the step if no files are found

  build_macos:
    name: Build macOS App (Unsigned)
    runs-on: macos-latest # Use the latest macOS runner

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby for CocoaPods
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1' # Updated Ruby version

      - name: Install CocoaPods
        run: gem install cocoapods

      # If your Podfile is not in the root, adjust the working-directory
      # e.g., working-directory: ./AetherVoice
      - name: Install Pod dependencies
        run: pod install --repo-update
        # working-directory: ./AetherVoice # Uncomment and set if Podfile is in a subfolder

      - name: Select latest Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: 'latest-stable'

      - name: Discover Workspace
        id: discover_workspace
        run: |
          # Find the .xcworkspace file.
          # Searches in the root and one level down (e.g., ./AetherVoice/*.xcworkspace)
          WORKSPACE_PATH=$(find . -maxdepth 2 -name "*.xcworkspace" -print -quit)
          if [ -z "$WORKSPACE_PATH" ]; then
            echo "Error: No .xcworkspace found."
            exit 1
          fi
          WORKSPACE_NAME=$(basename "$WORKSPACE_PATH")
          echo "Discovered workspace: $WORKSPACE_NAME"
          echo "WORKSPACE_PATH_FULL=$WORKSPACE_PATH" >> $GITHUB_OUTPUT # Store full path
          echo "WORKSPACE_NAME=$WORKSPACE_NAME" >> $GITHUB_OUTPUT
          # Determine the directory of the workspace
          WORKSPACE_DIR=$(dirname "$WORKSPACE_PATH")
          echo "WORKSPACE_DIR=$WORKSPACE_DIR" >> $GITHUB_OUTPUT

      - name: Build macOS Application
        env:
          # IMPORTANT: Replace 'AetherVoice' if your macOS scheme name is different
          SCHEME_NAME: 'AetherVoice' # Or e.g., 'AetherVoice (macOS)'
          WORKSPACE_PATH_FULL: ${{ steps.discover_workspace.outputs.WORKSPACE_PATH_FULL }}
          DESTINATION: 'generic/platform=macOS' # For building a generic macOS app
          # Or for a specific architecture: 'platform=macOS,arch=x86_64' or 'platform=macOS,arch=arm64'
        run: |
          echo "Building macOS workspace: $WORKSPACE_PATH_FULL with scheme: $SCHEME_NAME"
          xcodebuild build-for-testing \
            -workspace "$WORKSPACE_PATH_FULL" \
            -scheme "$SCHEME_NAME" \
            -destination "$DESTINATION" \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            ONLY_ACTIVE_ARCH=NO

      - name: Upload macOS Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macOS-Build-Output-${{ env.SCHEME_NAME }}
          path: |
            **/Build/Products/*-macosx/*.app
            **/Build/Products/Release/*.app # Also check Release folder, common for macOS
          if-no-files-found: error
